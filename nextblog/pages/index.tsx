import AboutMe from "../views/AboutMe";
import Affix from "../components/Affix";
import classNames from "classnames";
import DocsList from "../views/DocsList";
import FireworkCanvas from "../components/FireworkCanvas";
import Friends from "../views/Friends";
import Head from "next/head";
import Header from "../views/HeaderLOGO";
import NavLink from "../components/NavLink";
import OfficeInfo from "../views/OfficeInfo";
import PinnedListBroad from "../views/PinnedList";
import SocialBlock from "../views/SocialBlock";
import { AboutMeModel } from "../model/AboutMeModel";
import { Button, Modal, SSRProvider } from "react-bootstrap";
import { DocsListModel } from "../model/DocsListModel";
import {
  fetchAboutmeData,
  fetchFilterTagsData,
  fetchFirstLoadDocsListData,
  fetchFriendListData,
  fetchOfficeInfoData,
  fetchPinnedListData,
} from "../api-ajax/SSR-ajax";
import { FriendListModel } from "../model/FriendListModel";
import { OfficeInfoModel } from "../model/OfficeInfoModel";
import { PinnedListModel } from "../model/PinnedListModel";
import { useState } from "react";
import type { GetServerSideProps } from "next";
import { fetchHomeDocsListLoadMore } from "../api-ajax/CSR-ajax";

function Home(props: {
  fetchedAboutmeData: AboutMeModel;
  fetchedPinnedListData: PinnedListModel;
  fetchedFriendListData: FriendListModel;
  fetchedOfficeInfoData: OfficeInfoModel;
  fetchedFirstLoadDocsListData: DocsListModel;
  fetchedFilterTagsData: string[];
}) {
  const [docs_list, set_docs_list] = useState(
    props.fetchedFirstLoadDocsListData
  );
  const [modal_show, set_modal_show] = useState({ text: "", show: false });

  const handleModalClose = () => {
    set_modal_show({ text: undefined!, show: false });
  };

  const handleLoadMore = async () => {
    const loaded_data = (
      await fetchHomeDocsListLoadMore(docs_list[docs_list.length - 1].postDate)
    ).data;
    if (loaded_data.length !== 0) {
      set_docs_list([...docs_list, ...loaded_data]);
    } else {
      set_modal_show({ text: "加载已经到底了！", show: true });
    }
  };

  return (
    <SSRProvider>
      <div className=" tw-select-none ">
        <FireworkCanvas />
        <Head>
          <title>张宇腾 My Blog</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main
          className={classNames(
            "tw-mx-auto",
            "tw-grid",
            "tw-grid-flow-row",
            "tw-grid-cols-1",
            "md:tw-grid-cols-3",
            "lg:tw-grid-cols-4",
            "tw-subpixel-antialiased"
          )}
        >
          <div
            className={classNames(
              "tw-px-5",
              "md:tw-col-span-1",
              "lg:tw-col-span-1"
            )}
          >
            <header className=" tw-mt-6">
              <Header />
            </header>
            <AboutMe
              avatarURL={props.fetchedAboutmeData.avatarURL}
              impression={props.fetchedAboutmeData.impression}
              badges={props.fetchedAboutmeData.badges}
              quote={props.fetchedAboutmeData.quote}
            />
            <Affix direction="top" space={50} >
              <PinnedListBroad list={props.fetchedPinnedListData} />
            </Affix>
          </div>
          <div
            className={classNames(
              "tw-border-l",
              "tw-border-r",
              "md:tw-col-span-2",
              "lg:tw-col-span-2"
            )}
          >
            <Affix direction={"top"} space={0} topped={true}>
              <nav className=" tw-flex tw-justify-center tw-py-2 tw-border-b tw-bg-white">
                <NavLink content={"Home"} checked={true} href="/" />
                <NavLink content={"Docs"} checked={false} href="/docs" />
                <NavLink content={"About"} checked={false} href="/about" />
              </nav>
            </Affix>
            <DocsList list={docs_list} />
            <div className=" tw-my-4 tw-flex tw-justify-center">
              <Button className="shadow-none" as="div" onClick={handleLoadMore}>
                {"加载更多"}
              </Button>
            </div>
          </div>
          <div
            className={classNames(
              "tw-pt-4",
              "tw-px-5",
              "md:tw-col-span-3",
              "lg:tw-col-span-1"
            )}
          >
            <Friends list={props.fetchedFriendListData} />
            <OfficeInfo
              icp={props.fetchedOfficeInfoData.icp}
              siteTitle={props.fetchedOfficeInfoData.siteTitle}
              icpa={props.fetchedOfficeInfoData.icpa}
              ps={props.fetchedOfficeInfoData.ps}
              copyright={props.fetchedOfficeInfoData.copyright}
              poweredBy={props.fetchedOfficeInfoData.poweredBy}
              position={props.fetchedOfficeInfoData.position}
              phoneCall={props.fetchedOfficeInfoData.phoneCall}
              email={props.fetchedOfficeInfoData.email}
            />
            <Affix direction="top" space={50}>
              <SocialBlock />
            </Affix>
          </div>
        </main>
      </div>
      <Modal show={modal_show.show} onHide={handleModalClose} centered>
        <Modal.Body>{modal_show.text}</Modal.Body>
        <Modal.Footer>
          <Button as="div" variant="primary" onClick={handleModalClose}>
            {"关闭"}
          </Button>
        </Modal.Footer>
      </Modal>
    </SSRProvider>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  return {
    props: {
      fetchedAboutmeData: (await fetchAboutmeData()).data,
      fetchedPinnedListData: (await fetchPinnedListData()).data,
      fetchedFriendListData: (await fetchFriendListData()).data,
      fetchedOfficeInfoData: (await fetchOfficeInfoData()).data,
      fetchedFirstLoadDocsListData: (await fetchFirstLoadDocsListData()).data,
      fetchedFilterTagsData: (await fetchFilterTagsData()).data,
    },
  };
};

export default Home;
